#:kivy 1.0
WidgetsExample:

#:set s dp(150)
# ^ crea una variabile
<CanvasExample2>:
    canvas:
        Line:
            points: (self.width/2, self.height, self.width/2, 0)
        Line:
            points: (0, self.height/2, self.width, self.height/2)

        
<CanvasExample1>:
    canvas:
        Rectangle:
            pos: self.center_x - s/2, self.center_y - s/2 
            size: s, s
        Ellipse:
            size: s, s/2
        Line:
            points: (0, 0, 300, 300, 600, 0)
            # primi due sono le coordinate di partenza le ultime 2 sono quelle della fine
            width: 2    # spessore

<ImageExample@GridLayout>:
    cols:3
    Image:
        source: "resources_kivy/RESOURCES_KIVY/1_THE_LAB/RESOURCES/images/cake.jpg"
    Image:
        source: "resources_kivy/RESOURCES_KIVY/1_THE_LAB/RESOURCES/images/cake.jpg"
        allow_stretch: True     # permette alla foto di allargarsi
    Image:
        source: "resources_kivy/RESOURCES_KIVY/1_THE_LAB/RESOURCES/images/cake.jpg"
        allow_stretch: True     
        keep_ratio: False   # permette alla foto di allargarsi il massimo non tenendo conto dell'aspect ratio

<WidgetsExample>:
    cols: 3
    rows: 3
    ToggleButton:   # il toggle button rimane premuto
        text: "off"
        font_name: "LCDFont\digital-7.ttf"  # custom font
        font_size: "80dp"
        on_state: root.on_toggle_state(self)    
    Button:
        text: "click me"
        on_press: root.click_del_bottone()  # quando viene clickato il bottone
        disabled: not root.enabled
    Label:
        text: root.my_text  # questa variabile è sempre aggiornata
        font_name: "LCDFont\digital-7.ttf"  # custom font
        font_size: "80dp"
        color: 0.8, 0, 0.5
    Switch:     # bottone on off
        id: test_switch
        col: 1
        row: 1
        on_active: root.on_switch_active(self)
        active: True
    Slider:
        id: test_slider
        min: 0  # valore minimo
        max: 100    # val max
        value: 50   # valore di default
        orientation: "vertical"
        disabled: not test_switch.active
    BoxLayout:
        orientation:"vertical"
        Label:
            text: str(round((test_slider.value)))
            font_name: "LCDFont\digital-7.ttf"  # custom font
            font_size: "80dp"
            color: 0.8, 0, 0.5
        ProgressBar: 
            max: 100
            value: test_slider.value
    TextInput:
        id: test_text_input
        row: 3
        col: 1
        text: "inserisci qui il testo"      # valore di default che è presente nel box di input
        multiline: False    # il testo potrà essere scritto solo su una linea
        on_text_validate: root.on_enter_key(self)
    Label:
        text: root.input_text
        font_name: "LCDFont\digital-7.ttf"  # custom font
        font_size: "20dp"

<PageLayoutExample@PageLayout>:
    ScrollViewExample:
    GridLayoutExample:
    BoxLayoutExample:
    MainWidget:
    


<ScrollViewExample@ScrollView>:
    StackLayoutExample:
        size_hint: 1, None
        height: self.minimum_height     # minimum height è l'altezza minima del stacklayout

<StackLayoutExample>:
    # left-right top-bottom / 
    # orientation: "rl-bt"
    # padding: ("20dp", "20dp", "20dp", "20dp")    margine interno
    # spacing: "20dp"      spazio tra gli widget

<GridLayoutExample@GridLayout>:     # rows e cols
    cols: 2
    rows: 3
    # per impostare la dimensione di una colonna / riga bisogna cambiare la dimensione di tutti
    # gli elementi che fanno parte di quella colonna / riga
    Button:
        text: "A"
        size_hint: 0.5, 0.5
    Button:
        text: "B"
    Button:
        text: "C"
        size_hint: 0.5, 0.5
    Button:
        text: "D"
    Button:
        text: "E"
        size_hint: 0.5, 0.5
    Button:
        text: "F"

<AnchorLayoutExample@AnchorLayout>:  # anchor_x / anchor_y
    anchor_x: "left"
    anchor_y: "top"
    BoxLayout:  # possiamo creare un box layout dentro un anchor layout
        orientation: "horizontal"
        size_hint: 0.2, 0.2
        Button:
            text:"A"
        Button:
            text:"B"




<BoxLayoutExample@BoxLayout>:
    orientation: "vertical"     # cambia l'orientamento del boxlayout
    Button:
        text: "ciao A"
        size_hint: .8, .5   # "size" non funziona nel box layout quindi possiamo dire di usare la metà del valore previsto
    Button:
        #size: "100dp", "100dp"
        size_hint: .5, None   # oppure possiamo dire bypassare le dimensioni automatiche
        text: "ciao B"
        # x, center x, right
        # y, center_y, top
        pos_hint: {"x": 0}  # valore da 0 a 1
    BoxLayout:      # embed layout
        orientation:"horizontal"
        spacing: "10dp"     # spazio tra i widget
        Button:
            text:"button 1"
        Button:
            text:"button 2"
        Button:
            text:"button 3"
        Button:
            text:"button 4"
        

<MainWidget>:
    # bottone
    Button:
        text: "hello"   # testo dentro il bottone
        size: "100dp", "100dp"  # dimensioni
        pos: "100dp", "200dp"   # posizione in pixel
        color: 0, 0, 1, 1
    # testo
    Label:
        text: "red text"   # testo dentro il bottone
        size: "100dp", "100dp"  # dimensioni
        pos: "200dp", "200dp"   # posizione in pixel
        color: 1, 0, 0, 1     # colore in rgba